<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>backend</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <description>Cpa server module</description>

    <parent>
        <groupId>com.omnia.cpa</groupId>
        <artifactId>cpa</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <db.port>3306</db.port>
        <db.url>jdbc:mysql://${db.host}:${db.port}/${db.name}</db.url>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.omnia.cpa</groupId>
            <artifactId>frontend</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- DB -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>

        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-data-rest</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
            <scope>compile</scope>
        </dependency>

        <!--OTHER-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jsr310.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache.commons.version}</version>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!--This is required for spring-boot:run -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <db.host>vpn.server.omni-a.com</db.host>
                <db.name>OM_sources_temp</db.name>
                <db.username>taras</db.username>
                <db.password>Y3a5gWSNJVwR</db.password>
                <!--<db.host>localhost</db.host>-->
                <!--<db.name>cpa_test</db.name>-->
                <!--<db.username>root</db.username>-->
                <!--<db.password>root</db.password>-->
                <db.cp.init.size>20</db.cp.init.size>
                <db.cp.max.size>30</db.cp.max.size>
                <spring.profile>dev</spring.profile>
            </properties>
        </profile>

        <profile>
            <id>heroku</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>environment</name>
                    <value>heroku</value>
                </property>
            </activation>
            <properties>
                <db.host>vpn.server.omni-a.com</db.host>
                <db.name>OM_sources_temp</db.name>
                <db.username>taras</db.username>
                <db.password>Y3a5gWSNJVwR</db.password>
                <db.cp.init.size>10</db.cp.init.size>
                <db.cp.max.size>15</db.cp.max.size>
                <spring.profile>heroku</spring.profile>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>cpa</finalName>

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Copies resources from Angula2 bundle -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-dependency-plugin</artifactId>-->
                <!--<version>${dependency.plugin.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>unpack angula2 bundle</id>-->
                        <!--<phase>generate-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>unpack-dependencies</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<includeGroupIds>${project.groupId}</includeGroupIds>-->
                            <!--<includeArtifactIds>frontend</includeArtifactIds>-->
                            <!--<excludeTransitive>true</excludeTransitive>-->
                            <!--<outputDirectory>${basedir}/target/classes/static</outputDirectory>-->
                            <!--<excludes>META-INF/**</excludes>-->
                            <!--<overWriteReleases>true</overWriteReleases>-->
                            <!--<overWriteSnapshots>true</overWriteSnapshots>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../frontend/dist/browser</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
